openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/books:
    get:
      summary: 'GET books'
      description: 'List all books.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: nihil
                      price: '$50.00 USD'
                      date_published: 22/02/2020
                      authors:
                        -
                          id: 1
                          name: 'Ms. Graciela Maggio'
                        -
                          id: 3
                          name: 'Wilton Jenkins'
                      chapters:
                        -
                          id: 3
                          name: repellat
                          book_id: 1
                          created_at: '2022-08-11T03:52:20.000000Z'
                        -
                          id: 5
                          name: perferendis
                          book_id: 1
                          created_at: '2022-08-11T03:52:20.000000Z'
                    -
                      id: 2
                      name: voluptas
                      price: '$50.00 USD'
                      date_published: 05/09/2020
                      authors:
                        -
                          id: 1
                          name: 'Ms. Graciela Maggio'
                        -
                          id: 2
                          name: 'Deanna Baumbach'
                        -
                          id: 3
                          name: 'Wilton Jenkins'
                      chapters:
                        -
                          id: 2
                          name: molestias
                          book_id: 2
                          created_at: '2022-08-11T03:52:20.000000Z'
                        -
                          id: 4
                          name: libero
                          book_id: 2
                          created_at: '2022-08-11T03:52:20.000000Z'
                    -
                      id: 3
                      name: accusamus
                      price: '$75.00 USD'
                      date_published: 27/04/2021
                      authors:
                        -
                          id: 1
                          name: 'Ms. Graciela Maggio'
                        -
                          id: 2
                          name: 'Deanna Baumbach'
                        -
                          id: 3
                          name: 'Wilton Jenkins'
                      chapters:
                        -
                          id: 1
                          name: tempore
                          book_id: 3
                          created_at: '2022-08-11T03:52:20.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: nihil
                        price: '$50.00 USD'
                        date_published: 22/02/2020
                        authors:
                          -
                            id: 1
                            name: 'Ms. Graciela Maggio'
                          -
                            id: 3
                            name: 'Wilton Jenkins'
                        chapters:
                          -
                            id: 3
                            name: repellat
                            book_id: 1
                            created_at: '2022-08-11T03:52:20.000000Z'
                          -
                            id: 5
                            name: perferendis
                            book_id: 1
                            created_at: '2022-08-11T03:52:20.000000Z'
                      -
                        id: 2
                        name: voluptas
                        price: '$50.00 USD'
                        date_published: 05/09/2020
                        authors:
                          -
                            id: 1
                            name: 'Ms. Graciela Maggio'
                          -
                            id: 2
                            name: 'Deanna Baumbach'
                          -
                            id: 3
                            name: 'Wilton Jenkins'
                        chapters:
                          -
                            id: 2
                            name: molestias
                            book_id: 2
                            created_at: '2022-08-11T03:52:20.000000Z'
                          -
                            id: 4
                            name: libero
                            book_id: 2
                            created_at: '2022-08-11T03:52:20.000000Z'
                      -
                        id: 3
                        name: accusamus
                        price: '$75.00 USD'
                        date_published: 27/04/2021
                        authors:
                          -
                            id: 1
                            name: 'Ms. Graciela Maggio'
                          -
                            id: 2
                            name: 'Deanna Baumbach'
                          -
                            id: 3
                            name: 'Wilton Jenkins'
                        chapters:
                          -
                            id: 1
                            name: tempore
                            book_id: 3
                            created_at: '2022-08-11T03:52:20.000000Z'
                    items:
                      type: object
      tags:
        - 'Book management'
      security: []
    post:
      summary: 'POST books'
      description: 'Create new book.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Book management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the book.'
                  example: 'Libro 1'
                price:
                  type: integer
                  description: 'The price of the book.'
                  example: 50
                published_date:
                  type: string
                  description: 'The published date of the book.'
                  example: '2022-06-07'
              required:
                - name
                - price
                - published_date
      security: []
  '/api/v1/books/{id}':
    get:
      summary: 'GET book'
      description: 'Display info of the book.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - 'Book management'
      security: []
    put:
      summary: 'PUT book'
      description: 'Update info of the book.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Book management'
      security: []
    delete:
      summary: 'DELETE book'
      description: 'Delete an existing book.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Book management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/auth/login:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lance.lubowitz@example.org
                password:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - email
                - password
      security: []
  /api/v1/auth/register:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: neijcoswutgjftxhwvviazshgbiljpgxqrgpzsiemubypj
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: rozfaarvtlntsoywdpervsbuppxwfwgpadylno
                password:
                  type: string
                  description: ''
                  example: officiis
              required:
                - name
                - email
                - password
      security: []
  /api/v1/chapters:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ducimus
              required:
                - name
      security: []
  '/api/v1/chapters/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ad
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chapter.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: enim
              required:
                - name
      security: []
  '/api/v1/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ipsum
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/auth/logout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v2/user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v2/books:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'Este es la version 2 de la api libros'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v2/books/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Book management'
    description: "\nAPIs for managing books"
  -
    name: Endpoints
    description: ''
